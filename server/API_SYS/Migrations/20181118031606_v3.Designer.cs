// <auto-generated />
using System;
using API_SYS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API_SYS.Migrations
{
    [DbContext(typeof(apiContext))]
    [Migration("20181118031606_v3")]
    partial class v3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("API_SYS.Models.Cargos", b =>
                {
                    b.Property<int>("IdCargos")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idCargos")
                        .HasColumnType("int(11)");

                    b.Property<string>("Cargo")
                        .HasColumnName("cargo")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("IdCargos");

                    b.ToTable("cargos","api");

                    b.HasData(
                        new { IdCargos = 1, Cargo = "Vendedor" },
                        new { IdCargos = 2, Cargo = "Pedagogo" },
                        new { IdCargos = 3, Cargo = "Pedagogo II" },
                        new { IdCargos = 4, Cargo = "Copeira" },
                        new { IdCargos = 5, Cargo = "Gerente Financeiro" },
                        new { IdCargos = 6, Cargo = "Gerente de Tecnologia" },
                        new { IdCargos = 7, Cargo = "Programador" }
                    );
                });

            modelBuilder.Entity("API_SYS.Models.Chamados", b =>
                {
                    b.Property<int>("IdChamados")
                        .HasColumnName("idChamados")
                        .HasColumnType("int(11)");

                    b.Property<int>("Alert");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Informations");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("status")
                        .HasColumnType("enum('0','1','2')");

                    b.Property<int>("UsuarioId")
                        .HasColumnName("usuarioId")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("criado");

                    b.Property<DateTime>("ultimaAtualizacao");

                    b.HasKey("IdChamados");

                    b.HasIndex("UsuarioId")
                        .HasName("fkUsuario_idx");

                    b.ToTable("chamados","api");
                });

            modelBuilder.Entity("API_SYS.Models.Departamentos", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idDepartamento")
                        .HasColumnType("int(11)");

                    b.Property<string>("departamento")
                        .IsRequired()
                        .HasColumnName("departamento")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("IdDepartamento");

                    b.ToTable("departamentos","api");

                    b.HasData(
                        new { IdDepartamento = 1, departamento = "Financeiro" },
                        new { IdDepartamento = 2, departamento = "Assessoria" },
                        new { IdDepartamento = 3, departamento = "Juridico" },
                        new { IdDepartamento = 4, departamento = "Tecnlogia" },
                        new { IdDepartamento = 5, departamento = "Vendas" }
                    );
                });

            modelBuilder.Entity("API_SYS.Models.Usuarios", b =>
                {
                    b.Property<int>("IdUsuarios")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idUsuarios")
                        .HasColumnType("int(11)");

                    b.Property<int?>("CargoId")
                        .HasColumnName("cargoId")
                        .HasColumnType("int(11)");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnName("departamentoId")
                        .HasColumnType("int(11)");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Permissao");

                    b.Property<string>("uidUsuarios");

                    b.HasKey("IdUsuarios");

                    b.HasIndex("CargoId")
                        .HasName("fkCargo_idx");

                    b.HasIndex("DepartamentoId")
                        .HasName("fkDepartamento_idx");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("email_UNIQUE");

                    b.HasIndex("IdUsuarios")
                        .IsUnique()
                        .HasName("idUsuarios_UNIQUE");

                    b.ToTable("usuarios","api");

                    b.HasData(
                        new { IdUsuarios = 1, CargoId = 7, DepartamentoId = 4, Email = "kelvinsilva.ksv@gmail.com", Nome = "Kelvin Silva", Permissao = 2, uidUsuarios = "jSM6Yak6g8XGKKI5xnfqcNNhs8B3" }
                    );
                });

            modelBuilder.Entity("API_SYS.Models.Chamados", b =>
                {
                    b.HasOne("API_SYS.Models.Usuarios", "Usuario")
                        .WithMany("Chamados")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("fkUsuario");
                });

            modelBuilder.Entity("API_SYS.Models.Usuarios", b =>
                {
                    b.HasOne("API_SYS.Models.Cargos", "Cargo")
                        .WithMany("Usuarios")
                        .HasForeignKey("CargoId")
                        .HasConstraintName("fkCargo");

                    b.HasOne("API_SYS.Models.Departamentos", "Departamento")
                        .WithMany("Usuarios")
                        .HasForeignKey("DepartamentoId")
                        .HasConstraintName("fkDepartamento");
                });
#pragma warning restore 612, 618
        }
    }
}
